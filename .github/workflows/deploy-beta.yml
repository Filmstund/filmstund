name: Deploy beta

on:
  workflow_run:
    workflows: [ "CI" ]
    branches: [ master ]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: self-hosted # runner label defined in repo settings
    environment:
      name: preprod
      url: https://beta.filmstund.se
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "^1.17"
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: "yarn"
          cache-dependency-path: "web/yarn.lock"
      - name: Build assets
        run: |
          make build
          cd ./web
          yarn
          yarn build
          tar cf frontend.tar.gz -C build/ .
      - name: Transfer assets to server
        env:
          USER_BACKEND: ${{ secrets.USER_BACKEND }}
          HOST_BACKEND: ${{ secrets.HOST_BACKEND }}
          USER_FRONTEND: ${{ secrets.USER_FRONTEND }}
          HOST_FRONTEND: ${{ secrets.HOST_FRONTEND }}
        run: |
          ssh $USER_BACKEND@$HOST_BACKEND mkdir --parents backend-new
          scp .build/* $USER_BACKEND@$HOST_BACKEND:backend-new/
          scp ./web/frontend.tar.gz $USER_FRONTEND@$HOST_FRONTEND:frontend/beta.tar.gz
      - name: Replace backend
        env:
          USER_BACKEND: ${{ secrets.USER_BACKEND }}
          HOST_BACKEND: ${{ secrets.HOST_BACKEND }}
        run: |
          ssh $USER_BACKEND@$HOST_BACKEND systemctl --user stop filmstund.service
          ssh $USER_BACKEND@$HOST_BACKEND systemctl --user stop popularity.service
          ssh $USER_BACKEND@$HOST_BACKEND mkdir --parents backend-old
          ssh $USER_BACKEND@$HOST_BACKEND mv backend/* backend-old/
          ssh $USER_BACKEND@$HOST_BACKEND mv backend-new/* backend/
          ssh $USER_BACKEND@$HOST_BACKEND systemctl --user start filmstund.service
          ssh $USER_BACKEND@$HOST_BACKEND systemctl --user start popularity.service
      - name: Replace frontend
        env:
          USER_FRONTEND: ${{ secrets.USER_FRONTEND }}
          HOST_FRONTEND: ${{ secrets.HOST_FRONTEND }}
        run: |
          ssh $USER_FRONTEND@$HOST_FRONTEND rm -rf frontend/nonprod/*
          ssh $USER_FRONTEND@$HOST_FRONTEND tar xf frontend/beta.tar.gz -C frontend/nonprod/
