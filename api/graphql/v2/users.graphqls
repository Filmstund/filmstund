extend type Query  {
    currentUser: User!
}

extend type Mutation {
    updateUser(newInfo: UserDetailsInput!): User!

    # Generate a new calendar feed id, invalidating the old one
    invalidateCalendarFeed: User!

    # Remove the calendar feed for the current user
    disableCalendarFeed: User!

    addGiftCertificates(giftCerts: [GiftCertificateInput!]): User!
    deleteGiftCertificate(giftCert: GiftCertificateInput!): User!
}

type User {
    id: UUID!
    filmstadenMembershipId: FilmstadenMembershipID
    name: String!
    firstName: String!
    lastName: String!
    nick: String
    email: String!
    phone: String
    avatarURL: String
    giftCertificates: [GiftCertificate!]!
    calendarFeedId: String
    calendarFeedUrl: String
    lastLoginTime: Time!
    signupTime: Time!
    updateTime: Time!
}

type GiftCertificate {
    number: String!
    expireTime: Time!
    status: GiftCertificate_Status!
}

enum GiftCertificate_Status {
    AVAILABLE
    PENDING
    USED
    EXPIRED
    UNKNOWN
}

## ------ Input ------

input UserDetailsInput {
    firstName: String
    lastName: String
    nick: String
    filmstadenMembershipId: FilmstadenMembershipID
    phone: String
}

input GiftCertificateInput {
    number: String!
    expireTime: Time
}
