type AdminPaymentDetails {
    filmstadenBuyLink: String
    showingId: ShowingID
    attendees: [AttendeeAdminInfo!]!
}

type AttendeeAdminInfo {
    userId: UserID!
    showingId: ShowingID!
    hasPaid: Boolean!
    amountOwed: SEK!
    type: PaymentType!
    giftCertificateUsed: GiftCertificate
    filmstadenMembershipId: String
}

type AttendeePaymentDetails {
    hasPaid: Boolean!
    amountOwed: SEK!
    payTo: User!
    payer: User!
    swishLink: String
}

input AttendeePaymentInput {
    userId: UserID!
    showingId: ShowingID
    hasPaid: Boolean!
    amountOwed: SEK!
}


# Used for supplying how the user will pay, when attending a showing
input PaymentOption {
    type: PaymentType!
    ticketNumber: String
}

enum PaymentType {
    SWISH
    GIFT_CERTIFICATE
}

extend type Showing {
    adminPaymentDetails: AdminPaymentDetails
    attendeePaymentDetails: AttendeePaymentDetails
}
