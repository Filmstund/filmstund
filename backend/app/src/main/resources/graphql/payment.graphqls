type AdminPaymentDetails {
    filmstadenBuyLink: String
    showingId: ShowingID
    #participants: [Participant!]! # FIXME
}

type AttendeePaymentDetails {
    hasPaid: Boolean!
    amountOwed: SEK!
    payTo: User!
    payer: User!
    swishLink: String
}

type ParticipantPaymentInfo {
    id: UUID!
    user: User!
    showing: Showing!
    hasPaid: Boolean!
    amountOwed: SEK!
}

input ParticipantPaymentInput {
    id: UUID!
    userId: String!
    showingId: UUID
    hasPaid: Boolean!
    amountOwed: SEK!
}


# Used for supplying how the use will pay, when attending a showing
input PaymentOption {
    type: PaymentType!
    ticketNumber: String
}

enum PaymentType {
    Swish
    GiftCertificate
}

extend type Showing {
    adminPaymentDetails: AdminPaymentDetails
    attendeePaymentDetails: AttendeePaymentDetails
}
