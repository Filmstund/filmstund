buildscript {
  ext.kotlinVersion = '1.1.51'
  ext.springBootSnapshotVersion = '2.0.0.M5'

  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://repo.spring.io/snapshot" }
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootSnapshotVersion")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
    classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
  }
}

//plugins {
  //id("org.ajoberstar.grgit") version "2.0.0-rc.1"
//}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

version = "1.1-SNAPSHOT"
sourceCompatibility = 1.8
compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

repositories {
  mavenCentral()
  maven { url "https://repo.spring.io/milestone" }
  maven { url "https://repo.spring.io/snapshot" }
}

dependencies {
  compile("org.springframework.boot:spring-boot-starter-web-services:$springBootSnapshotVersion")
  compile("org.springframework.boot:spring-boot-starter-data-mongodb:$springBootSnapshotVersion")
  compile("org.springframework.boot:spring-boot-starter-cache:$springBootSnapshotVersion")
  compile("org.springframework.boot:spring-boot-starter-security:$springBootSnapshotVersion")
  compile("org.springframework.security:spring-security-jwt:1.0.8.RELEASE")
  compile("org.springframework.security.oauth:spring-security-oauth2:2.2.0.RELEASE")
  compile("org.springframework.session:spring-session-data-mongodb:2.0.0.M3")
  compile("org.springframework.session:spring-session-core:$springBootSnapshotVersion")
  compile("com.github.ben-manes.caffeine:caffeine:2.+")
  compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlinVersion")
  compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
  compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.1")
  compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.1")
  compile("com.googlecode.libphonenumber:libphonenumber:8.4.2")
  compile("com.google.guava:guava:21.0")
  compile("org.jsoup:jsoup:1.10.3")
  testCompile("org.springframework.boot:spring-boot-starter-test:$springBootSnapshotVersion")
}
/*
tasks {
  fun addPipeToTheEndOfStr(value: Any, length: Int = 55): String {
    val strValue = value.toString()
    val strLen = strValue.length
    val times = Math.abs(length - strLen)
    return strValue +  " ".repeat(times-1) + "│"
  }
  "versionBanner" {
    doLast {
      val grgit = Grgit.open()
      val gitHead = grgit.head()
      val gitCommitId = addPipeToTheEndOfStr(gitHead.id)
      val gitCommitTime = addPipeToTheEndOfStr(gitHead.dateTime)
      val gitBranch = grgit.branch.current.name
      val now = addPipeToTheEndOfStr(ZonedDateTime.now())
      val projectNameAndBranch = addPipeToTheEndOfStr("${project.name} ($gitBranch)")
      val banner =
"""  ┌───────────────┬───────────────────────────────────────────────────────┐
  │ Project       │ $projectNameAndBranch
  ├───────────────┼───────────────────────────────────────────────────────┤
  │ Version       │ ${addPipeToTheEndOfStr(project.version)}
  │ Revision SHA  │ $gitCommitId
  │ Revision Date │ $gitCommitTime
  │ Build date    │ $now
  └───────────────┴───────────────────────────────────────────────────────┘"""
      val bannerFile = File("build/banner.txt")
      bannerFile.createNewFile()
      bannerFile.writeText(banner)
    }
  }

  "copyBanner"(Copy::class) {
    dependsOn("versionBanner")
    from("build/")
    include("banner.txt")
    into("build/resources/main")
  }
  "processResources" {
    dependsOn("copyBanner")
  }
}
*/
