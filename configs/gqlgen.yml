# Note: this file is expected to be run with CWD=internal/graph (go generate ./... from repo root)

# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - ../../api/graphql/*.graphqls

# Where should the generated server code go?
exec:
  filename: gql/runtime.go
  package: gql

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: model/models_gen.go
  package: model

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: ./
  package: graph

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/filmstund/filmstund/internal/graph/model"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  FilmstadenMembershipID:
    model:
      - github.com/filmstund/filmstund/internal/graph/scalars.FilmstadenMembershipID
  LocalDate:
    model:
      - github.com/filmstund/filmstund/internal/graph/scalars.LocalDate
  LocalTime:
    model:
      - github.com/filmstund/filmstund/internal/graph/scalars.LocalTime
  UUID:
    model:
      - github.com/filmstund/filmstund/internal/graph/scalars.UUIDScalar
  SEK:
    model:
      - github.com/filmstund/filmstund/internal/currency.SEK
  User:
    fields:
      giftCertificates:
        resolver: true  # generate an explicit resolver for this field
  Showing:
    fields:
      movie:
        resolver: true
      cinemaScreen:
        resolver: true
      admin:
        resolver: true
      payToUser:
        resolver: true
      filmstadenSeatMap:
        resolver: true
      attendees:
        resolver: true
      adminPaymentDetails:
        resolver: true
      attendeePaymentDetails:
        resolver: true
      myTickets:
        resolver: true
      ticketRange:
        resolver: true
